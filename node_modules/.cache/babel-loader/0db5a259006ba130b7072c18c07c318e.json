{"ast":null,"code":"var _jsxFileName = \"/home/aman/Documents/workspace/search_city/search-city/src/App.js\";\nimport React, { useState } from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport './App.css';\nimport { getCities } from './helper';\nimport styled from 'styled-components';\nconst SearchBar = styled.input`\n  width: 45%;\n  background-color: white;\n  position: absolute:\n  top: 40%;\n  min-width: 200px;\n  border: none;\n  border-radius: 3px 0 0 3px;\n  padding: 20px;\n  :focus{\n    outline: none;\n  }\n`;\nconst SearchButton = styled.button`\n  width: 15%;\n  background-color: #e8415d;\n  position: absolute:\n  top: 40%;\n  padding-left: 10px;\n  border: none;\n  min-width: 100px;\n  display: block;\n  font-color: white;\n  border-radius: 2px 2px 0;\n`;\n\nfunction App() {\n  const [cityName, setCityName] = useState('');\n  const [cityList, setCityList] = useState([]);\n  const [searchedCities, setSearchedCities] = useState([]); // const dropdown = document.getElementById('cityname');\n\n  const getCitiesData = () => {\n    if (cityName.length > 1) {\n      getCities(cityName.toLowerCase()).then(res => {\n        setCityList(res); //     res.map(city => {\n        //       var el = document.createElement(\"option\");\n        // el.textContent = city;\n        // el.value = city;\n        // dropdown.appendChild(el);}\n        // )\n      }).catch(err => console.log(err));\n    }\n  };\n\n  const onSubmit = () => {\n    if (cityName.length > 1) {\n      getCitiesData();\n\n      if (!searchedCities.includes(cityName)) {\n        setSearchedCities([cityName, ...searchedCities]);\n      }\n    }\n  };\n\n  const appendInput = event => {\n    setCityName(event.target.value);\n    getCitiesData();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    placeholder: \"Search By College Or City\",\n    onChange: appendInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"cityname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Boston\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Cambridge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(SearchButton, {\n    onClick: onSubmit,\n    className: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-search mr10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), \"Search\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, cityList.length > 0 && cityList.map(city => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 55\n    }\n  }, city.name))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, searchedCities.length > 0 && searchedCities.map(cityName => /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 71\n    }\n  }, cityName))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aman/Documents/workspace/search_city/search-city/src/App.js"],"names":["React","useState","Dropdown","getCities","styled","SearchBar","input","SearchButton","button","App","cityName","setCityName","cityList","setCityList","searchedCities","setSearchedCities","getCitiesData","length","toLowerCase","then","res","catch","err","console","log","onSubmit","includes","appendInput","event","target","value","map","city","name","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport './App.css';\nimport { getCities } from './helper';\nimport styled from 'styled-components';\n\nconst SearchBar = styled.input`\n  width: 45%;\n  background-color: white;\n  position: absolute:\n  top: 40%;\n  min-width: 200px;\n  border: none;\n  border-radius: 3px 0 0 3px;\n  padding: 20px;\n  :focus{\n    outline: none;\n  }\n`;\n\nconst SearchButton = styled.button`\n  width: 15%;\n  background-color: #e8415d;\n  position: absolute:\n  top: 40%;\n  padding-left: 10px;\n  border: none;\n  min-width: 100px;\n  display: block;\n  font-color: white;\n  border-radius: 2px 2px 0;\n`;\n\nfunction App() {\n  const [ cityName, setCityName ] = useState('');\n  const [ cityList, setCityList ] = useState([]);\n  const [ searchedCities, setSearchedCities ] = useState([]);\n\n  // const dropdown = document.getElementById('cityname');\n\n  const getCitiesData = () => {     \n    if(cityName.length > 1) {\n      getCities(cityName.toLowerCase()).then(res => {\n        setCityList(res);\n    //     res.map(city => {\n    //       var el = document.createElement(\"option\");\n    // el.textContent = city;\n    // el.value = city;\n    // dropdown.appendChild(el);}\n    // )\n      }).catch(err => console.log(err));\n    }\n  }\n\n  const onSubmit = () => {\n    if(cityName.length > 1) {\n      getCitiesData();\n      if(!searchedCities.includes(cityName)) {\n        setSearchedCities([cityName, ...searchedCities]);\n      }\n    }\n  } \n\n  const appendInput = (event) => {\n    setCityName(event.target.value);\n    getCitiesData();\n  }\n\n  return (\n    <div className=\"bg-image\">\n      <div className=\"flex-container\">\n        <SearchBar placeholder=\"Search By College Or City\" onChange={appendInput}/>\n          <datalist id=\"cityname\">\n            <option value=\"Boston\"></option>\n            <option value=\"Cambridge\"></option>\n          </datalist>\n          {/* <Dropdown\n            placeholder='Search By College Or City'\n            fluid\n            search\n            selection\n            options={searchedCities}\n            onChange={appendInput}\n          /> */}\n        <SearchButton\n          onClick={onSubmit}\n          className=\"white\"\n        >\n          <i className=\"fas fa-search mr10\"></i>\n          Search\n        </SearchButton>\n      </div>\n      <ul>\n        { cityList.length > 0 && cityList.map(city => <li>{city.name}</li>)}\n      </ul>\n      <ul>\n        { searchedCities.length > 0 && searchedCities.map(cityName => <li style={{color:'red'}}>{cityName}</li>)}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}